[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "darwin-mcp"
version = "1.0.0"
description = "Darwin Genetic Algorithm MCP server for AI-driven optimization"
readme = "README.md"
authors = [
    {name = "DevQ.ai Team", email = "team@devq.ai"},
]
license = {text = "BSD-3-Clause"}
requires-python = ">=3.8"
dependencies = [
    # Core optimization
    "pygad>=3.4.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    
    # MCP and API
    "mcp>=1.6.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "websockets>=10.4",
    "aiohttp>=3.8.0",
    
    # Dashboard and visualization
    "panel>=1.3.0",
    "bokeh>=3.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    
    # Data storage
    "surrealdb>=0.3.0",
    "redis>=4.6.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    
    # Monitoring and observability
    "logfire>=3.0.0",
    "prometheus-client>=0.17.0",
    "structlog>=23.1.0",
    
    # Utilities
    "typer>=0.9.0",
    "rich>=13.4.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.0",
    "click>=8.1.0",
    "pyjwt>=2.10.1",
    "argon2-cffi>=25.1.0",
    "email-validator>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.11.0",
    "hypothesis>=6.82.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.0.280",
    "pre-commit>=3.3.0",
    "bandit>=1.7.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings[python]>=0.22.0",
]

benchmark = [
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.0",
    "line-profiler>=4.1.0",
    "pytest-benchmark>=4.0.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["darwin_mcp*"]

[tool.setuptools.package-data]
darwin_mcp = ["*.json", "*.yaml", "*.yml", "templates/*"]

[project.scripts]
darwin-mcp = "darwin_mcp.mcp.server:main"

[project.entry-points."mcp.servers"]
darwin = "darwin_mcp.mcp.server:create_server"

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["darwin_mcp"]
known_third_party = ["pygad", "fastapi", "panel", "bokeh", "mcp"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pygad.*",
    "surrealdb.*",
    "panel.*",
    "bokeh.*",
    "logfire.*",
    "mcp.*"
]
ignore_missing_imports = true

# Ruff linting
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B018"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=darwin_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=85",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmark tests",
    "mcp: marks tests for MCP functionality",
]

# Coverage configuration
[tool.coverage.run]
source = ["darwin_mcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[project.urls]
"Homepage" = "https://github.com/devqai/darwin"
"Documentation" = "https://darwin.devq.ai/docs"
"Repository" = "https://github.com/devqai/darwin"
"Bug Tracker" = "https://github.com/devqai/darwin/issues"
"Changelog" = "https://github.com/devqai/darwin/blob/main/CHANGELOG.md"